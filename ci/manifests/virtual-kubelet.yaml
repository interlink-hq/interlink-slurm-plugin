apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtual-kubelet
  namespace: interlink
  labels:
    nodeName: virtual-kubelet
spec:
  replicas: 1
  selector:
    matchLabels:
      nodeName: virtual-kubelet
  template:
    metadata:
      labels:
        nodeName: virtual-kubelet 
    spec:
      hostNetwork: true
      automountServiceAccountToken: true
      serviceAccountName: virtual-kubelet 
      containers:
      # - name: interlink
      #   image: "ghcr.io/intertwin-eu/interlink/interlink"
      #   imagePullPolicy: Always
      #   env:
      #     - name: INTERLINKCONFIGPATH
      #       value: "/etc/interlink/InterLinkConfig.yaml"
      #   volumeMounts:
      #     - name: il-config
      #       mountPath: /etc/interlink/InterLinkConfig.yaml
      #       subPath: InterLinkConfig.yaml
      #     - name: sockets
      #       mountPath: /var/run/
      - name: inttw-vk
        image: "ghcr.io/intertwin-eu/interlink/virtual-kubelet-inttw" 
        imagePullPolicy: Always
        env:
        - name: NODENAME
          value: virtual-kubelet 
        - name: KUBELET_PORT
          value: "10250"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONFIGPATH
          value: "/etc/interlink/InterLinkConfig.yaml"
        volumeMounts:
        - name: config
          mountPath: /etc/interlink/InterLinkConfig.yaml
          subPath: InterLinkConfig.yaml
        # - name: sockets 
        #   mountPath: /var/run/
      volumes:
      - name: config
        configMap:
          # Provide the name of the ConfigMap you want to mount.
          name: virtual-kubelet-config
      - name: sockets
        hostPath: 
          path: /var/run
          type: Directory
      # - name: il-config
      #   configMap:
      #     # Provide the name of the ConfigMap you want to mount.
      #     name: interlink-config
      # - name: sockets
      #   emptyDir: {}  
